name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ['CI']
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: 10m # ← AQUÍ, dentro de "with"
          script: |
            echo "🚀 Starting deployment..."
            
            # Verificar directorio de trabajo
            if [ ! -d "/app" ]; then
              echo "❌ /app directory missing, creating..."
              sudo mkdir -p /app
              sudo chown ubuntu:ubuntu /app
            fi
            
            cd /app || exit 1
            
            # Verificar git repository
            if [ ! -d ".git" ]; then
              echo "❌ Git repo missing, cloning..."
              git clone git@github.com:CristianMacha/ci-cd-backend.git .
            fi

            echo "📥 Pulling latest code..."
            git pull origin main || exit 1
            
            # Verificar archivos críticos
            if [ ! -f "docker-compose.yml" ]; then
              echo "❌ docker-compose.yml missing!"
              exit 1
            fi
            
            if [ ! -f "Dockerfile" ]; then
              echo "❌ Dockerfile missing!"
              exit 1
            fi

            echo "🔨 Building and deploying with docker-compose..."
            docker-compose down || true
            
            # Build con manejo de errores
            if ! docker-compose up -d --build; then
              echo "❌ Docker compose failed!"
              docker-compose logs
              exit 1
            fi

            echo "✅ Verifying containers..."
            sleep 3
            
            # Verificar que containers estén corriendo
            if ! docker ps | grep nestjs-app | grep -q "Up"; then
              echo "❌ NestJS container not running!"
              docker logs nestjs-app
              exit 1
            fi
            
            if ! docker ps | grep nginx-proxy | grep -q "Up"; then
              echo "❌ Nginx container not running!"
              docker logs nginx-proxy
              exit 1
            fi

            echo "🌐 Testing endpoints..."
            
            # Health checks optimizados (menos tiempo)
            for i in {1..3}; do
              if curl -f http://localhost:3000/health 2>/dev/null; then
                echo "✅ App health check passed"
                break
              elif [ $i -eq 3 ]; then
                echo "❌ App health check failed after 3 attempts"
                exit 1
              else
                echo "⏳ App health check attempt $i/3..."
                sleep 2
              fi
            done
            
            for i in {1..3}; do
              if curl -f http://localhost:80/health 2>/dev/null; then
                echo "✅ Nginx health check passed"
                break
              elif [ $i -eq 3 ]; then
                echo "❌ Nginx health check failed after 3 attempts"
                exit 1
              else
                echo "⏳ Nginx health check attempt $i/3..."
                sleep 2
              fi
            done

            echo "🎉 Deployment completed successfully!"
